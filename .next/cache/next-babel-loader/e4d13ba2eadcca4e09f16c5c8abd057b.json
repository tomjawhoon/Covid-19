{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MasterOfnodejs\\\\Desktop\\\\nextjs\\\\pages\\\\index.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from 'swr';\nimport fetch from 'unfetch';\nimport columns from '../components/DataTableColumns';\nimport DataTable from 'react-data-table-component';\nimport Loading from '../components/Loading'; //import FlippingCard from 'react-ui-cards';\n\nimport DataChart from '../components/DataChart';\nimport TimeSeriesChart from '../components/TimeSeriesChart';\nvar apiUrl = \"https://api.covid19api.com/summary\";\nvar timeseriesUrl = \"https://pomber.github.io/covid19/timeseries.json\";\n\nvar fetcher = function fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}; //const fetcher = url => axios.get(url);\n\n\nvar IndexPage = function IndexPage() {\n  var _useSWR = useSWR(apiUrl, fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error; // success => data error => error\n\n\n  var _useSWR2 = useSWR(timeseriesUrl, fetcher),\n      timeseries = _useSWR2.data; // success =>\n\n\n  if (!data) {\n    return __jsx(Loading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    });\n  }\n\n  if (error) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    }, \"Error.....\");\n  }\n\n  console.log('timeseries', timeseries.America);\n  console.log('timeseries', timeseries);\n  return __jsx(\"div\", {\n    className: \"jsx-1796117416\" + \" \" + \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(_JSXStyle, {\n    id: \"1796117416\",\n    __self: _this\n  }, \"@import url('https://fonts.googleapis.com/css2?family=Comic+Neue:wght@700&display=swap');*.jsx-1796117416{font-family:'Comic Neue',sans-serif;}.container.jsx-1796117416{width:820px;margin:0 auto;}.title.jsx-1796117416{text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFzdGVyT2Zub2RlanNcXERlc2t0b3BcXG5leHRqc1xccGFnZXNcXGluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJCd0IsQUFFbUcsQUFFekMsQUFHekIsQUFJTSxZQUhKLE1BSWxCLFFBSEEsVUFKQSIsImZpbGUiOiJDOlxcVXNlcnNcXE1hc3Rlck9mbm9kZWpzXFxEZXNrdG9wXFxuZXh0anNcXHBhZ2VzXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcclxuaW1wb3J0IGZldGNoIGZyb20gJ3VuZmV0Y2gnO1xyXG5pbXBvcnQgY29sdW1ucyBmcm9tICcuLi9jb21wb25lbnRzL0RhdGFUYWJsZUNvbHVtbnMnO1xyXG5pbXBvcnQgRGF0YVRhYmxlIGZyb20gJ3JlYWN0LWRhdGEtdGFibGUtY29tcG9uZW50JztcclxuaW1wb3J0IExvYWRpbmcgZnJvbSAnLi4vY29tcG9uZW50cy9Mb2FkaW5nJztcclxuLy9pbXBvcnQgRmxpcHBpbmdDYXJkIGZyb20gJ3JlYWN0LXVpLWNhcmRzJztcclxuaW1wb3J0IERhdGFDaGFydCBmcm9tICcuLi9jb21wb25lbnRzL0RhdGFDaGFydCc7XHJcbmltcG9ydCBUaW1lU2VyaWVzQ2hhcnQgZnJvbSAnLi4vY29tcG9uZW50cy9UaW1lU2VyaWVzQ2hhcnQnO1xyXG5jb25zdCBhcGlVcmwgPSBcImh0dHBzOi8vYXBpLmNvdmlkMTlhcGkuY29tL3N1bW1hcnlcIjtcclxuY29uc3QgdGltZXNlcmllc1VybCA9IFwiaHR0cHM6Ly9wb21iZXIuZ2l0aHViLmlvL2NvdmlkMTkvdGltZXNlcmllcy5qc29uXCI7XHJcbmNvbnN0IGZldGNoZXIgPSB1cmwgPT4gZmV0Y2godXJsKS50aGVuKHIgPT4gci5qc29uKCkpO1xyXG4vL2NvbnN0IGZldGNoZXIgPSB1cmwgPT4gYXhpb3MuZ2V0KHVybCk7XHJcbmNvbnN0IEluZGV4UGFnZSA9ICgpID0+IHtcclxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IHVzZVNXUihhcGlVcmwsIGZldGNoZXIpOyAvLyBzdWNjZXNzID0+IGRhdGEgZXJyb3IgPT4gZXJyb3JcclxuICAgIGNvbnN0IHsgZGF0YTogdGltZXNlcmllcyB9ID0gdXNlU1dSKHRpbWVzZXJpZXNVcmwsIGZldGNoZXIpOyAvLyBzdWNjZXNzID0+XHJcbiAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgICByZXR1cm4gKDxMb2FkaW5nIC8+KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICByZXR1cm4gPHA+RXJyb3IuLi4uLjwvcD5cclxuICAgIH1cclxuXHJcbiAgICBjb25zb2xlLmxvZygndGltZXNlcmllcycsIHRpbWVzZXJpZXMuQW1lcmljYSlcclxuICAgIGNvbnNvbGUubG9nKCd0aW1lc2VyaWVzJywgdGltZXNlcmllcylcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Q29taWMrTmV1ZTp3Z2h0QDcwMCZkaXNwbGF5PXN3YXAnKTtcclxuICAgICAgICAgICAgICAgICp7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdDb21pYyBOZXVlJywgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC5jb250YWluZXIge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA4MjBweDtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC50aXRsZXtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBgfTwvc3R5bGU+XHJcblxyXG4gICAgICAgICAgICA8aDIgY2xhc3NOYW1lPVwidGl0bGVcIj5DT1ZJRC0xOSBSZWFsdGltZTwvaDI+XHJcbiAgICAgICAgICAgIDxEYXRhVGFibGVcclxuICAgICAgICAgICAgICAgIHRpdGxlPVwiQ09WSUQtMTkgIFN1bW1hcnlcIlxyXG4gICAgICAgICAgICAgICAgY29sdW1ucz17Y29sdW1uc31cclxuICAgICAgICAgICAgICAgIGRhdGE9e2RhdGEuQ291bnRyaWVzfVxyXG4gICAgICAgICAgICAgICAgcGFnaW5hdGlvbj17dHJ1ZX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgey8qIDxwPntKU09OLnN0cmluZ2lmeShkYXRhKX08L3A+ICovfVxyXG4gICAgICAgICAgICA8VGltZVNlcmllc0NoYXJ0IGRhdGE9e3RpbWVzZXJpZXMuVGhhaWxhbmR9IHRpdGxlPVwiVGhhaWxhbmRcIiAvPlxyXG4gICAgICAgICAgICA8VGltZVNlcmllc0NoYXJ0IGRhdGE9e3RpbWVzZXJpZXMuVVN9IHRpdGxlPVwiVVNcIiAvPlxyXG4gICAgICAgICAgICA8RGF0YUNoYXJ0IGRhdGE9e2RhdGEuQ291bnRyaWVzfSB0aXRsZT1cIkluIHRoZSB3b3JsZFwiIC8+XHJcblxyXG5cclxuICAgICAgICAgICAgey8qIDxGbGlwcGluZ0NhcmQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RmxpcHBpbmdDYXJkQmFjaz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb250ZW50IHRoYXQgd2lsbCBiZSBkaXNwbGF5ZWQgb24gdGhlIGJhY2sgb2YgdGhlIGNhcmRcclxuICAgICAgICAgICAgICAgIDwvRmxpcHBpbmdDYXJkQmFjaz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxGbGlwcGluZ0NhcmRGcm9udD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb250ZW50IHRoYXQgd2lsbCBiZSBkaXNwbGF5ZWQgb24gdGhlIGZyb250IG9mIHRoZSBjYXJkXHJcbiAgICAgICAgICAgICAgICA8L0ZsaXBwaW5nQ2FyZEZyb250PlxyXG4gICAgICAgICAgICA8L0ZsaXBwaW5nQ2FyZD5cclxuKi8gfVxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBJbmRleFBhZ2U7Il19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\MasterOfnodejs\\\\\\\\Desktop\\\\\\\\nextjs\\\\\\\\pages\\\\\\\\index.js */\"), __jsx(\"h2\", {\n    className: \"jsx-1796117416\" + \" \" + \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"COVID-19 Realtime\"), __jsx(DataTable, {\n    title: \"COVID-19  Summary\",\n    columns: columns,\n    data: data.Countries,\n    pagination: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), __jsx(TimeSeriesChart, {\n    data: timeseries.Thailand,\n    title: \"Thailand\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), __jsx(TimeSeriesChart, {\n    data: timeseries.US,\n    title: \"US\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), __jsx(DataChart, {\n    data: data.Countries,\n    title: \"In the world\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["C:/Users/MasterOfnodejs/Desktop/nextjs/pages/index.js"],"names":["useSWR","fetch","columns","DataTable","Loading","DataChart","TimeSeriesChart","apiUrl","timeseriesUrl","fetcher","url","then","r","json","IndexPage","data","error","timeseries","console","log","America","Countries","Thailand","US"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,IAAMC,MAAM,GAAG,oCAAf;AACA,IAAMC,aAAa,GAAG,kDAAtB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG;AAAA,SAAIT,KAAK,CAACS,GAAD,CAAL,CAAWC,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAJ;AAAA,CAAnB,C,CACA;;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,gBACId,MAAM,CAACO,MAAD,EAASE,OAAT,CADV;AAAA,MACZM,IADY,WACZA,IADY;AAAA,MACNC,KADM,WACNA,KADM,EAC6B;;;AAD7B,iBAEShB,MAAM,CAACQ,aAAD,EAAgBC,OAAhB,CAFf;AAAA,MAENQ,UAFM,YAEZF,IAFY,EAEyC;;;AAC7D,MAAI,CAACA,IAAL,EAAW;AACP,WAAQ,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AAED,MAAIC,KAAJ,EAAW;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAAU,CAACG,OAArC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B;AACA,SACI;AAAA,wCAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0tIAgBI;AAAA,wCAAc,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAhBJ,EAiBI,MAAC,SAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,OAAO,EAAEf,OAFb;AAGI,IAAA,IAAI,EAAEa,IAAI,CAACM,SAHf;AAII,IAAA,UAAU,EAAE,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,EAwBI,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEJ,UAAU,CAACK,QAAlC;AAA4C,IAAA,KAAK,EAAC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,EAyBI,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEL,UAAU,CAACM,EAAlC;AAAsC,IAAA,KAAK,EAAC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EA0BI,MAAC,SAAD;AAAW,IAAA,IAAI,EAAER,IAAI,CAACM,SAAtB;AAAiC,IAAA,KAAK,EAAC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,CADJ;AA0CH,CAvDD;;AAyDA,eAAeP,SAAf","sourcesContent":["import useSWR from 'swr';\r\nimport fetch from 'unfetch';\r\nimport columns from '../components/DataTableColumns';\r\nimport DataTable from 'react-data-table-component';\r\nimport Loading from '../components/Loading';\r\n//import FlippingCard from 'react-ui-cards';\r\nimport DataChart from '../components/DataChart';\r\nimport TimeSeriesChart from '../components/TimeSeriesChart';\r\nconst apiUrl = \"https://api.covid19api.com/summary\";\r\nconst timeseriesUrl = \"https://pomber.github.io/covid19/timeseries.json\";\r\nconst fetcher = url => fetch(url).then(r => r.json());\r\n//const fetcher = url => axios.get(url);\r\nconst IndexPage = () => {\r\n    const { data, error } = useSWR(apiUrl, fetcher); // success => data error => error\r\n    const { data: timeseries } = useSWR(timeseriesUrl, fetcher); // success =>\r\n    if (!data) {\r\n        return (<Loading />);\r\n    }\r\n\r\n    if (error) {\r\n        return <p>Error.....</p>\r\n    }\r\n\r\n    console.log('timeseries', timeseries.America)\r\n    console.log('timeseries', timeseries)\r\n    return (\r\n        <div className=\"container\">\r\n            <style jsx>{`\r\n          @import url('https://fonts.googleapis.com/css2?family=Comic+Neue:wght@700&display=swap');\r\n                *{\r\n                    font-family: 'Comic Neue', sans-serif;\r\n                }\r\n                .container {\r\n                    width: 820px;\r\n                    margin: 0 auto;\r\n                }\r\n                .title{\r\n                    text-align: center;\r\n                }\r\n                  \r\n            `}</style>\r\n\r\n            <h2 className=\"title\">COVID-19 Realtime</h2>\r\n            <DataTable\r\n                title=\"COVID-19  Summary\"\r\n                columns={columns}\r\n                data={data.Countries}\r\n                pagination={true}\r\n            />\r\n            {/* <p>{JSON.stringify(data)}</p> */}\r\n            <TimeSeriesChart data={timeseries.Thailand} title=\"Thailand\" />\r\n            <TimeSeriesChart data={timeseries.US} title=\"US\" />\r\n            <DataChart data={data.Countries} title=\"In the world\" />\r\n\r\n\r\n            {/* <FlippingCard>\r\n                            <FlippingCardBack>\r\n                                Content that will be displayed on the back of the card\r\n                </FlippingCardBack>\r\n                            <FlippingCardFront>\r\n                                Content that will be displayed on the front of the card\r\n                </FlippingCardFront>\r\n            </FlippingCard>\r\n*/ }\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default IndexPage;"]},"metadata":{},"sourceType":"module"}